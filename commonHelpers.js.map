{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport izitoast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nconst buttonStart = document.querySelector('[data-start]');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0].getTime();\n    if (userSelectedDate < Date.now()) {\n      izitoast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      buttonStart.disabled = true;\n    } else {\n      buttonStart.disabled = false;\n    }\n  },\n};\nconst dateTimeInput = flatpickr('#datetime-picker', options);\n\n// =========================Button Start disabled=========================\n\nbuttonStart.disabled = true;\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nbuttonStart.addEventListener('click', () =>\n  setInterval(() => {\n    const currentTime = Date.now();\n    const deltaTime = userSelectedDate - currentTime;\n    const time = convertMs(deltaTime);\n    const { days, hours, minutes, seconds } = time;\n\n    document.querySelector('[data-days').textContent = days\n      .toString()\n      .padStart(2, '0');\n    document.querySelector('[data-hours]').textContent = hours\n      .toString()\n      .padStart(2, '0');\n    document.querySelector('[data-minutes]').textContent = minutes\n      .toString()\n      .padStart(2, '0');\n    document.querySelector('[data-seconds]').textContent = seconds\n      .toString()\n      .padStart(2, '0');\n  }, 1000)\n);\n"],"names":["userSelectedDate","buttonStart","options","selectedDates","izitoast","flatpickr","convertMs","ms","days","hours","minutes","seconds","currentTime","deltaTime","time"],"mappings":"+IAOA,IAAIA,EACJ,MAAMC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EAC5BH,EAAmBG,EAAc,GAAG,QAAO,EACvCH,EAAmB,KAAK,OAC1BI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDH,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EACsBI,EAAU,mBAAoBH,CAAO,EAI3DD,EAAY,SAAW,GAEvB,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAV,EAAY,iBAAiB,QAAS,IACpC,YAAY,IAAM,CAChB,MAAMW,EAAc,KAAK,MACnBC,EAAYb,EAAmBY,EAC/BE,EAAOR,EAAUO,CAAS,EAC1B,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKG,EAE1C,SAAS,cAAc,YAAY,EAAE,YAAcN,EAChD,SAAU,EACV,SAAS,EAAG,GAAG,EAClB,SAAS,cAAc,cAAc,EAAE,YAAcC,EAClD,SAAU,EACV,SAAS,EAAG,GAAG,EAClB,SAAS,cAAc,gBAAgB,EAAE,YAAcC,EACpD,SAAU,EACV,SAAS,EAAG,GAAG,EAClB,SAAS,cAAc,gBAAgB,EAAE,YAAcC,EACpD,SAAU,EACV,SAAS,EAAG,GAAG,CACnB,EAAE,GAAI,CACT"}